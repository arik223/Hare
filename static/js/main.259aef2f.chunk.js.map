{"version":3,"sources":["Components/Superhero/superhero2.svg","Pages/Home/assets/hare.svg","Pages/Home/assets/spotify.svg","Pages/Home/assets/apple.svg","Components/Footer/assets/amazon-button.svg","Components/Footer/assets/apple-music-button.svg","Components/Footer/assets/itunes-button.svg","Components/Footer/assets/spotify-button.svg","Components/Footer/assets/youtube-button.svg","Components/Footer/assets/social-instagram.svg","Components/Footer/assets/social-apple.svg","Components/Footer/assets/social-facebook.svg","Components/Footer/assets/social-twitter.svg","Components/Footer/assets/social-soundcloud.svg","Components/Footer/assets/social-spotify.svg","Components/Footer/assets/social-amazon.svg","fonts/Druk-Wide-Bold.ttf","Components/Superhero/Superhero.js","Pages/Home/Home.js","Routes.js","serviceWorker.js","Components/Navigation/Navigation.js","Components/Footer/Footer.js","Main.js","index.js"],"names":["module","exports","Superhero","className","src","superhero","alt","styles","gridContainer","position","bottom","debutButtons","marginTop","color","borderRadius","borderWidth","borderColor","padding","debutGridContainer","marginLeft","DebutModule","Grid","container","style","direction","alignItems","spacing","Button","variant","image","Spotify","AppleMusic","DebutTitle","DebutButtonLabel","Homepage","HareBody","Box","width","Routes","exact","path","component","sensitive","Boolean","window","location","hostname","match","NavigationItem","url","label","to","Navigation","listenHereArray","YouTube","Amazon","iTunes","socialArray","SocialApple","SocialInstagram","SocialFacebook","SocialTwitter","SocialSoundcloud","SocialSpotify","SocialAmazon","footer","useStyles","makeStyles","theme","input","border","flex","button","backgroundColor","IconModule","itemArray","classname","console","log","justify","map","itemSource","Form","noValidate","autoComplete","InputBase","placeholder","inputProps","Footer","classes","Typography","align","gutterBottom","m","Main","props","children","history","createHistory","process","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.259aef2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/superhero2.c957d14b.svg\";","module.exports = __webpack_public_path__ + \"static/media/hare.2bf71cfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/spotify.d60114e7.svg\";","module.exports = __webpack_public_path__ + \"static/media/apple.45ab9c03.svg\";","module.exports = __webpack_public_path__ + \"static/media/amazon-button.787ae920.svg\";","module.exports = __webpack_public_path__ + \"static/media/apple-music-button.80c6b7e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/itunes-button.f327376d.svg\";","module.exports = __webpack_public_path__ + \"static/media/spotify-button.11abdc47.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube-button.d15b76b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/social-instagram.b4937e8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/social-apple.4e50dbbb.svg\";","module.exports = __webpack_public_path__ + \"static/media/social-facebook.c749dc29.svg\";","module.exports = __webpack_public_path__ + \"static/media/social-twitter.93ab6c74.svg\";","module.exports = __webpack_public_path__ + \"static/media/social-soundcloud.d4563026.svg\";","module.exports = __webpack_public_path__ + \"static/media/social-spotify.cdfb39bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/social-amazon.135821f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/Druk-Wide-Bold.2206d6cc.ttf\";","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport superhero from './superhero2.svg'\nimport './Superhero.css'\n\nconst Superhero = () => {\n  return (\n    <div className='superhero'>\n        <div className='superhero-container'>\n            {/* <div className='superhero-label'>\n                HARE\n            </div> */}\n            <img src={superhero} alt=\"React Logo\" />\n        </div>\n        {/* <Link to={'/'} >HOME</Link>\n        <Link to=\"/Tour\">TOUR</Link>\n        <Link to=\"/Merch\">MERCH</Link>\n        <Link to=\"/Music\">MUSIC</Link>\n        <Link to=\"/About\">ABOUT</Link> */}\n    </div>\n  )\n}\n\nconst Image = ({url, label}) => {\n    return (\n        <div className='nav-item'>\n            <div className='label'>\n                <Link to={url}> \n                    {label}\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Superhero","import React from \"react\"\nimport Superhero from '../../Components/Superhero/Superhero'\nimport HareBody from './assets/hare.svg'\nimport { Grid, Box, Button } from '@material-ui/core'\nimport './Home.css'\n// import { borderColor } from \"@material-ui/system\"\nimport Spotify from './assets/spotify.svg'\nimport AppleMusic from './assets/apple.svg'\n\n\nconst styles = {\n  gridContainer: {\n      position: 'absolute',\n      bottom: '44vw'\n  },\n  debutButtons: {\n    marginTop: '2vw',\n    color: 'white',\n    borderRadius: '0',\n    borderWidth: '2px',\n    borderColor: 'white',\n    padding: '22px 12px'\n  },\n  debutGridContainer: {\n    marginLeft: '0.5vw'\n  }\n};\n\nconst Homepage = () => {\n  return (\n    <div className='home-container'>\n      <Superhero />\n      <div className='home-body'>\n      <img className='home-image' src={HareBody} alt=\"React Logo\" />\n      <Grid container style={styles.gridContainer} spacing={0} direction='row'>\n          <Box width={1/2}>\n              <DebutModule />\n          </Box>\n      </Grid>\n\n      </div>\n    </div>  \n  )\n}\n\nconst DebutModule = () => {\n  return (\n    <div className='debut'>\n      <DebutTitle/>\n      <Grid container style={styles.debutGridContainer} direction='column' alignItems=\"flex-start\" spacing={4}>\n        <Button variant=\"outlined\" color=\"primary\"  style={styles.debutButtons}>\n          <DebutButtonLabel image={Spotify}/>\n        </Button>\n        <Button variant=\"outlined\" color=\"primary\" style={styles.debutButtons}>\n          <DebutButtonLabel image={AppleMusic}/>\n        </Button>\n      </Grid>\n      \n    </div>\n  )\n}\n\nconst DebutTitle = () => {\n  return (\n    <div className='debut-title'>\n      <div className='title'>\n        DEBUT SINGLE\n      </div>\n      <div className='sub-title'>\n        BETTER OFF\n      </div>\n    </div>\n  )\n}\n\nconst DebutButtonLabel = ({image}) => {\n  return (\n    <div className='button-label'>\n      <div className='button-text'>\n        Play on\n      </div>\n      <img className='button-debut-image' src={image} alt=\"React Logo\" />\n    </div>\n  )\n}\n\n\nexport default Homepage","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport Homepage from './Pages/Home/Home'\nimport Music from './Pages/Music/Music'\nimport Tours from './Pages/Tours/Tours'\n\nconst Routes = () => {\n  const baseName = process.env.PUBLIC_URL\n\n  return (\n    <div>\n    <Route exact={true} path=\"/\" component={Homepage} />\n    <Route sensitive path=\"/Music\" component={Homepage} />\n    <Route sensitive path=\"/Tour\" component={Homepage} />\n    <Route sensitive path=\"/Merch\" component={Homepage} />\n    <Route sensitive path=\"/About\" component={Homepage} />\n\n    \n    </div>\n  )\n}\n\nexport default Routes","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport './Navigation.css'\n\nconst Navigation = () => {\n  return (\n    <div className='navigation'>\n        <div className='items-wrapper'>\n            <NavigationItem url={'/'} label={'HOME'} />\n            <NavigationItem url={'/Tour'} label={'TOUR'} />\n            <NavigationItem url={'/Merch'} label={'MERCH'} />\n            <NavigationItem url={'/Music'} label={'MUSIC'} />\n            <NavigationItem url={'/About'} label={'ABOUT'} />\n        </div>\n        {/* <Link to={'/'} >HOME</Link>\n        <Link to=\"/Tour\">TOUR</Link>\n        <Link to=\"/Merch\">MERCH</Link>\n        <Link to=\"/Music\">MUSIC</Link>\n        <Link to=\"/About\">ABOUT</Link> */}\n    </div>\n  )\n}\n\nconst NavigationItem = ({url, label}) => {\n    return (\n        <div className='nav-item'>\n            <div className='label'>\n                <Link to={url}> \n                    {label}\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Navigation","import React from \"react\"\nimport { Typography, Grid, Button, Box } from '@material-ui/core'\nimport InputBase from '@material-ui/core/InputBase';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Amazon from './assets/amazon-button.svg'\nimport AppleMusic from './assets/apple-music-button.svg'\nimport iTunes from './assets/itunes-button.svg'\nimport Spotify from './assets/spotify-button.svg'\nimport YouTube from './assets/youtube-button.svg'\n\nimport SocialInstagram from './assets/social-instagram.svg'\nimport SocialApple from './assets/social-apple.svg'\nimport SocialFacebook from './assets/social-facebook.svg'\nimport SocialTwitter from './assets/social-twitter.svg'\nimport SocialSoundcloud from './assets/social-soundcloud.svg'\nimport SocialSpotify from './assets/social-spotify.svg'\nimport SocialAmazon from './assets/social-amazon.svg'\n\n\nconst listenHereArray = [Spotify, YouTube, AppleMusic, Amazon, iTunes]\nconst socialArray = [SocialApple, SocialInstagram, SocialFacebook, SocialTwitter, SocialSoundcloud, SocialSpotify, SocialAmazon]\n\n\n// import { Link } from \"react-router-dom\"\n// import './Navigation.css'\n\nconst styles = {\n    footer: {\n        color: 'white'\n    }\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    input: {\n      border: '2px solid white',\n      padding: '10px',\n      marginLeft: theme.spacing(1),\n      flex: 1,\n      color: 'white',\n      borderRadius: 1,\n      borderColor: 'white',\n      width: '471px'\n    },\n    button: {\n        border: '2px solid white',\n        color: 'white',\n        backgroundColor: '#A2A3E6',\n        borderRadius: '0px',\n        // marginTop: '5.1vw'\n    }\n  }));\n\n  \nconst Footer = () => {\n    const classes = useStyles();\n\n  return (\n    <footer className='footer' style={styles.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        NEWSLETTER\n        </Typography>\n        <Form {...classes}/>\n        <Box m={5} /> \n        <Button className={classes.button}>\n            SUBMIT\n        </Button>\n        <Box m={4} /> \n        <IconModule itemArray={listenHereArray} classname={'listen-here'} />\n        <Box m={8} /> \n        <IconModule itemArray={socialArray} classname={'social-share'} />\n        <Box m={10} /> \n\n        {/* <Copyright /> */}\n    </footer>\n  )\n}\n\nconst IconModule = ({itemArray, classname}) => {\n    console.log(itemArray)\n    return (\n        <div className={classname}>\n            <Grid\n            style={styles.gridContainer}\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n                {itemArray.map((itemSource)=> {\n                    console.log(itemSource)\n                    return (\n                        <Button>\n                            <img className='listen-more-button' src={itemSource} alt=\"React Logo\" />\n                        </Button>\n                    )\n                    \n                })}\n            </Grid>\n        </div>\n    )\n}\n\nconst Form = ({input}) => {\n    return (\n        <form className={'footer-form'} noValidate autoComplete=\"off\" style={styles.footer}>\n            <InputBase\n            className={input}\n            placeholder=\"E-MAIL ADDRESS\"\n            inputProps={{ 'aria-label': 'Email address' }}\n             />\n        </form>\n\n    )\n}\n\nexport default Footer","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation'\nimport Footer from './Components/Footer/Footer'\n// import Routes from './Routes'\n\nfunction Main(props) {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        Nav goes here\n      </header> */}\n      <Navigation/>\n      <div className='container'>\n        {props.children}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Main\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport Routes from \"./Routes\"\nimport { Router, BrowserRouter } from \"react-router-dom\"\n// import { useRouterHistory } from 'react-router'\nimport createHistory from 'history/createBrowserHistory'\nimport * as serviceWorker from \"./serviceWorker\"\nimport Main from './Main'\nimport './fonts/Druk-Wide-Bold.ttf'\n// const history = useRouterHistory(createHistory)({\n//   basename: process.env.PUBLIC_URL\n// })\nconst history = createHistory()\n\nconsole.log(process.env.PUBLIC_URL)\nReactDOM.render(\n  <BrowserRouter history={history} basename={process.env.PUBLIC_URL}>\n    <Main>\n      <Routes />\n    </Main>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n)\n\nserviceWorker.unregister()"],"sourceRoot":""}